//Addition
int a = 18;
int b = 6;
int c = a + b;
Console.WriteLine(c);

//Subtraction
int a = 18;
int b = 6;
int c = a - b;
Console.WriteLine(c);

//Multiplication
int a = 18;
int b = 6;
int c = a * b;
Console.WriteLine(c);

//Division
int a = 18;
int b = 6;
int c = a / b;
Console.WriteLine(c);

//Order of operation
int a = 5;
int b = 4;
int c = 2;
int d = a + b * c;
Console.WriteLine(d);

//Order of Operation override
int a = 5;
int b = 4;
int c = 2;
int d = (a + b) * c;
Console.WriteLine(d);

//Many different Operations
int a = 5;
int b = 4;
int c = 2;
int d = (a + b) - 6 * c + (12 * 4) / 3 + 12;
Console.WriteLine(d);

//Integer division always produces an integer 
int a = 7;
int b = 4;
int c = 3;
int d = (a  + b) / c;
Console.WriteLine(d);

//to get a remainder use modulo
int a = 7;
int b = 4;
int c = 3;
int d = (a  + b) / c;
int e = (a + b) % c;
Console.WriteLine($"quotient: {d}");
Console.WriteLine($"remainder: {e}");

// int type has minimum and maximum limits. 
int max = int.MaxValue;
int min = int.MinValue;
Console.WriteLine($"The range of integers is {min} to {max}");

//An example of overflow
int max = int.MaxValue;
int min = int.MinValue;
int what = max + 3;
Console.WriteLine($"An example of overflow: {what}");


//An example of underflow
int max = int.MaxValue;
int min = int.MinValue;
int what = min - 3;
Console.WriteLine($"An example of underflow: {what}");

//The double numeric type represents a double-precision floating point number. 
//Those terms may be new to you. 
//A floating point number is useful to represent non-integral numbers that may be very large or small in magnitude.

//Double Makes me cry
double a = 5;
double b = 4;
double c = 2;
double d = (a  + b) / c;
Console.WriteLine(d);

//More Double
double a = 19;
double b = 23;
double c = 8;
double d = (a  + b) / c;
Console.WriteLine(d);

//The range of a double value is much greater than integer values.
double max = double.MaxValue;
double min = double.MinValue;
Console.WriteLine($"The range of double is {min} to {max}");

//rounding errors exist
double third = 1.0 / 3.0;
Console.WriteLine(third);

//Decimal Min Max
decimal min = decimal.MinValue;
decimal max = decimal.MaxValue;
Console.WriteLine($"The range of the decimal type is {min} to {max}");\

//Deciam has greater percision then double
double a = 1.0;
double b = 3.0;
Console.WriteLine(a / b);

decimal c = 1.0M;
decimal d = 3.0M;
Console.WriteLine(c / d);

//code that calculates the area of a circle whose radius is 2.50 centimeters.
double radius = 2.50;
double area = Math.PI * radius * radius;
Console.WriteLine(area);
